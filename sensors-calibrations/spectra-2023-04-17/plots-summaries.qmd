---
title: "Compare spectra and sensors"
subtitle: "One afternoon, hemispherical: 17 April"
author: "Pedro J. Aphalo"
date: 2023-05-02
date-modified: 2023-05-02
format: html
code-fold: true
toc: true
---

## Setup packages

```{r, message=FALSE}
rm(list = ls(pattern = "*"))

library(ggspectra)
library(ooacquire)
library(lubridate)
library(dplyr)

photon_as_default()
```

## Read in the data

```{r}
load(file = "collection.first.two.hours.Rda")
load(file = "collection.third.to.fifth.hours.Rda")

collection.hemispherical <- c(collection.first.two.hours.irrad.mspct,
                              collection.third.to.fifth.hours.irrad.mspct)
hemispherical.spct <- rbindspct(collection.hemispherical)

when.measured <- when_measured(hemispherical.spct)
time.range <- c(when.measured[[1]], when.measured[[length(when.measured)]])

load("../../data-rda/minute_2015_2023.tb.rda")

logger.data <- subset(minute_2015_2023.tb, time >= time.range[1] & time <= time.range[2])

rm(minute_2015_2023.tb)
```

## Compute summaries from spectra and merge

```{r}
summaries.hemispherical <- irrad_summary_table(collection.hemispherical,
                                               summary.type = "PAR",
                                               digits = 5)
colnames(summaries.hemispherical)

# the logger tags the average when it is saved at the end of the minute with next's minute start time
# the spectra are tagged with the time at the start of the acquisition at the start of the minute

logger.data$time <- logger.data$time - minutes(1)
summaries.hemispherical$when.measured <- round_date(summaries.hemispherical$when.measured, unit = "minute")

combined.data <- full_join(logger.data, summaries.hemispherical, by = c("time" = "when.measured"))
```

## Weather conditions

Data acquired mostly under totally clear sky in Viikki on 2023-04-17 with custom DH7-SMA hemispherical diffuser.

Fraction of PAR irradiance corresponding to diffuse radiation.

```{r}
ggplot() +
  geom_line(data = logger.data, 
            mapping = aes(time, PAR_diff_fr)) +
  expand_limits(y = 0) +
  theme_bw()
```

```{r}
ggplot() +
  geom_line(data = logger.data, 
            mapping = aes(time, air_temp_C)) +
  theme_bw()
```

## Photon irradiances

Irradiances plotted versus time of day

### UV-C check

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, `Q_]UVC.CIE`),
            linetype = "dotted") +
  expand_limits(y = 0) +
  theme_bw()
```

### PAR

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, Q_PAR),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, PAR_umol_CS)) +
  expand_limits(y = 0) +
  theme_bw()
```


```{r}
ggplot() +
  geom_line(data = logger.data,
             mapping = aes(time, PAR_umol_BF), colour = "red") +
  geom_line(data = logger.data,
             mapping = aes(time, PAR_umol), colour = "blue") +
  geom_line(data = logger.data,
             mapping = aes(time, PAR_umol_CS)) +
  expand_limits(y = 0) +
  theme_bw()
```


### UV-B

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, Q_UVB.CIE - `Q_]UVC.CIE` * 0.57),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, UVB_umol)) +
  expand_limits(y = 0) +
  theme_bw()
```

### UV-A2

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, Q_UVA2.CIE  - `Q_]UVC.CIE` * 0.25),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, UVA2_umol)) +
  expand_limits(y = 0) +
  theme_bw()
```
### UV-A1

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, Q_UVA1.CIE - `Q_]UVC.CIE` * 0.25),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, UVA1_umol)) +
  expand_limits(y = 0) +
  theme_bw()
```

### "Blue" (400 nm to 50 nm)

```{r, eval = FALSE}
ggplot() +
  # geom_line(data = summaries.hemispherical, 
  #           mapping = aes(when.measured, Q_UVA1.CIE - `Q_]UVC.CIE` * 0.55),
#            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, blue_umol)) +
  expand_limits(y = 0) +
  theme_bw()
```


## Photon ratios relative to PAR

### UV-B : PAR 

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, (Q_UVB.CIE - `Q_]UVC.CIE` * 0.57) / Q_PAR),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, UVB_umol / PAR_umol_CS)) +
  expand_limits(y = 0) +
  theme_bw() +
  labs(y = "UV-B : PAR photon ratio",
       x = "Time (hh:mm UTC)")
```

### UV-A2 : PAR

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, (Q_UVA2.CIE - `Q_]UVC.CIE` * 0.25) / Q_PAR),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, UVA2_umol / PAR_umol_CS)) +
  expand_limits(y = 0) +
  theme_bw()
```

### UV-A1 : PAR

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, (Q_UVA1.CIE - `Q_]UVC.CIE` * 0.25) / Q_PAR),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, UVA1_umol / PAR_umol_CS)) +
  expand_limits(y = 0) +
  theme_bw()
```

## Photon ratio irradiance vs. hemispherical fluence

### PAR

```{r}
ggplot(combined.data, aes(time, Q_PAR / PAR_umol_CS)) +
  geom_line(na.rm = TRUE) +
  geom_hline(yintercept = 1, colour = "blue") +
  expand_limits(y = 1) +
  theme_bw()
```

### UV-A

```{r}
ggplot(combined.data, aes(time, (Q_UVA2.CIE + Q_UVA1.CIE - `Q_]UVC.CIE` * 0.55 * 2) / UVA_umol)) +
  geom_line(na.rm = TRUE) +
  geom_hline(yintercept = 1, colour = "blue") +
  expand_limits(y = 1) +
  theme_bw()
```

### UV-A1

```{r}
ggplot(combined.data, aes(time, (Q_UVA1.CIE - `Q_]UVC.CIE` * 0.25) / UVA1_umol)) +
  geom_line(na.rm = TRUE) +
  geom_hline(yintercept = 1, colour = "blue") +
  expand_limits(y = 1) +
  theme_bw()
```

### UV-A2

```{r}
ggplot(combined.data, aes(time, (Q_UVA2.CIE - `Q_]UVC.CIE` * 0.25) / UVA2_umol)) +
  geom_line(na.rm = TRUE) +
  geom_hline(yintercept = 1, colour = "blue") +
  expand_limits(y = 1) +
  theme_bw()
```



### UV-B

```{r}
ggplot(combined.data, aes(time, (Q_UVB.CIE - `Q_]UVC.CIE` * 0.57) / UVB_umol)) +
  geom_line(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE) +
  geom_hline(yintercept = 1, colour = "blue") +
  expand_limits(y = 1) +
  theme_bw()
```

## Other photon ratios

```{r}
ggplot() +
  geom_line(data = summaries.hemispherical, 
            mapping = aes(when.measured, `red:far-red[q:q]`),
            linetype = "dotted") +
  geom_line(data = logger.data,
             mapping = aes(time, red_far_red)) +
  theme_bw() +
  labs(y = "R: FR photon ratio",
       x = "Time (hh:mm UTC)")
```
